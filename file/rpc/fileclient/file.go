// Code generated by goctl. DO NOT EDIT.
// Source: file.proto

package fileclient

import (
	"context"

	"zjhx.com/file/rpc/file"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FileRecord     = file.FileRecord
	UploadResponse = file.UploadResponse

	File interface {
		// 上传文件创建记录
		UploadFile(ctx context.Context, in *FileRecord, opts ...grpc.CallOption) (*UploadResponse, error)
	}

	defaultFile struct {
		cli zrpc.Client
	}
)

func NewFile(cli zrpc.Client) File {
	return &defaultFile{
		cli: cli,
	}
}

// 上传文件创建记录
func (m *defaultFile) UploadFile(ctx context.Context, in *FileRecord, opts ...grpc.CallOption) (*UploadResponse, error) {
	client := file.NewFileClient(m.cli.Conn())
	return client.UploadFile(ctx, in, opts...)
}
