// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package videoclient

import (
	"context"

	"zjhx.com/video/rpc/video"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UploadRequest  = video.UploadRequest
	UploadResponse = video.UploadResponse
	VideoRecord    = video.VideoRecord

	Video interface {
		// 上传文件创建记录
		UploadVideo(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error)
	}

	defaultVideo struct {
		cli zrpc.Client
	}
)

func NewVideo(cli zrpc.Client) Video {
	return &defaultVideo{
		cli: cli,
	}
}

// 上传文件创建记录
func (m *defaultVideo) UploadVideo(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error) {
	client := video.NewVideoClient(m.cli.Conn())
	return client.UploadVideo(ctx, in, opts...)
}
